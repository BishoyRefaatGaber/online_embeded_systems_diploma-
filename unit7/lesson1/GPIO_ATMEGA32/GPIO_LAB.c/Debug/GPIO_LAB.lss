
GPIO_LAB.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000021c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000021c  000002b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080006a  0080006a  000002ba  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ba  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  00000328  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007c8  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000606  00000000  00000000  00000b20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000037b  00000000  00000000  00001126  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  000014a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000347  00000000  00000000  000014e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001cf  00000000  00000000  0000182f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  000019fe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e1       	ldi	r30, 0x1C	; 28
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 36       	cpi	r26, 0x6B	; 107
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 93 00 	call	0x126	; 0x126 <main>
  8a:	0c 94 0c 01 	jmp	0x218	; 0x218 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <PORT_INIT>:
volatile unsigned char SEG [10] = {0x7E , 0x0C , 0xB6 , 0x9E , 0xCC , 0xDA , 0xFA , 0x0E , 0xFE , 0xDE }; //7SEG values
volatile unsigned char count = 0;
void PORT_INIT(){
	
	//PORTA
	DDRA |= 0xFE; //output for 7segment 0b11111110
  92:	8a b3       	in	r24, 0x1a	; 26
  94:	9b b3       	in	r25, 0x1b	; 27
  96:	8e 6f       	ori	r24, 0xFE	; 254
  98:	9b bb       	out	0x1b, r25	; 27
  9a:	8a bb       	out	0x1a, r24	; 26
	//PORTB
	DDRB |= 0x1;  //dot output for 7SEG 0b00000001
  9c:	87 b3       	in	r24, 0x17	; 23
  9e:	98 b3       	in	r25, 0x18	; 24
  a0:	81 60       	ori	r24, 0x01	; 1
  a2:	98 bb       	out	0x18, r25	; 24
  a4:	87 bb       	out	0x17, r24	; 23
	//PORTC 
	DDRC = 0x0;  //reset port c
  a6:	15 ba       	out	0x15, r1	; 21
  a8:	14 ba       	out	0x14, r1	; 20
	DDRC |= 0xE7; //output for the 3 LEDs & the 2 COMs for 7SEG & 3 inputs for LEDs(Switches) 0b11100111
  aa:	84 b3       	in	r24, 0x14	; 20
  ac:	95 b3       	in	r25, 0x15	; 21
  ae:	87 6e       	ori	r24, 0xE7	; 231
  b0:	95 bb       	out	0x15, r25	; 21
  b2:	84 bb       	out	0x14, r24	; 20
	PORTC |= (1 << 3); // activate pull up resistance for input pin 3
  b4:	85 b3       	in	r24, 0x15	; 21
  b6:	96 b3       	in	r25, 0x16	; 22
  b8:	88 60       	ori	r24, 0x08	; 8
  ba:	96 bb       	out	0x16, r25	; 22
  bc:	85 bb       	out	0x15, r24	; 21
  be:	08 95       	ret

000000c0 <COUNTER_VALUE>:
// 	unsigned long i;
// 	for (i = 0 ; i < (x * F_CPU) ; i++);
// }
void COUNTER_VALUE (unsigned char x){
	unsigned char  j;
	for (j=0;j<=x;j++){
  c0:	90 e0       	ldi	r25, 0x00	; 0
  c2:	2e c0       	rjmp	.+92     	; 0x120 <COUNTER_VALUE+0x60>
		PORTC |= (1 << 6);
  c4:	25 b3       	in	r18, 0x15	; 21
  c6:	36 b3       	in	r19, 0x16	; 22
  c8:	20 64       	ori	r18, 0x40	; 64
  ca:	36 bb       	out	0x16, r19	; 22
  cc:	25 bb       	out	0x15, r18	; 21
		PORTC &= ~(1 << 7);
  ce:	25 b3       	in	r18, 0x15	; 21
  d0:	36 b3       	in	r19, 0x16	; 22
  d2:	2f 77       	andi	r18, 0x7F	; 127
  d4:	36 bb       	out	0x16, r19	; 22
  d6:	25 bb       	out	0x15, r18	; 21
		PORTA = SEG[x]  ;
  d8:	e8 2f       	mov	r30, r24
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	e0 5a       	subi	r30, 0xA0	; 160
  de:	ff 4f       	sbci	r31, 0xFF	; 255
  e0:	20 81       	ld	r18, Z
  e2:	30 e0       	ldi	r19, 0x00	; 0
  e4:	3c bb       	out	0x1c, r19	; 28
  e6:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e8:	ef e1       	ldi	r30, 0x1F	; 31
  ea:	fe e4       	ldi	r31, 0x4E	; 78
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <COUNTER_VALUE+0x2c>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <COUNTER_VALUE+0x32>
  f2:	00 00       	nop
		_delay_ms(10);
		PORTC &= ~(1 << 6);
  f4:	25 b3       	in	r18, 0x15	; 21
  f6:	36 b3       	in	r19, 0x16	; 22
  f8:	2f 7b       	andi	r18, 0xBF	; 191
  fa:	36 bb       	out	0x16, r19	; 22
  fc:	25 bb       	out	0x15, r18	; 21
		PORTC |= (1 << 7);
  fe:	25 b3       	in	r18, 0x15	; 21
 100:	36 b3       	in	r19, 0x16	; 22
 102:	20 68       	ori	r18, 0x80	; 128
 104:	36 bb       	out	0x16, r19	; 22
 106:	25 bb       	out	0x15, r18	; 21
		PORTA = SEG[0];
 108:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	3c bb       	out	0x1c, r19	; 28
 110:	2b bb       	out	0x1b, r18	; 27
 112:	ef e1       	ldi	r30, 0x1F	; 31
 114:	fe e4       	ldi	r31, 0x4E	; 78
 116:	31 97       	sbiw	r30, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <COUNTER_VALUE+0x56>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <COUNTER_VALUE+0x5c>
 11c:	00 00       	nop
// 	unsigned long i;
// 	for (i = 0 ; i < (x * F_CPU) ; i++);
// }
void COUNTER_VALUE (unsigned char x){
	unsigned char  j;
	for (j=0;j<=x;j++){
 11e:	9f 5f       	subi	r25, 0xFF	; 255
 120:	89 17       	cp	r24, r25
 122:	80 f6       	brcc	.-96     	; 0xc4 <COUNTER_VALUE+0x4>
		PORTC &= ~(1 << 6);
		PORTC |= (1 << 7);
		PORTA = SEG[0];
		_delay_ms(10);
	}
}
 124:	08 95       	ret

00000126 <main>:
int main(void)
{
	PORT_INIT();
 126:	0e 94 49 00 	call	0x92	; 0x92 <PORT_INIT>
	count = 0;
 12a:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
	while (1) 
    {
		
		COUNTER_VALUE (count);
 12e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 132:	0e 94 60 00 	call	0xc0	; 0xc0 <COUNTER_VALUE>
		
		if(((PINC & (1 << 3)) >> 3 ) == 0){
 136:	83 b3       	in	r24, 0x13	; 19
 138:	94 b3       	in	r25, 0x14	; 20
 13a:	83 fd       	sbrc	r24, 3
 13c:	f8 cf       	rjmp	.-16     	; 0x12e <main+0x8>
			if (count == 0){
 13e:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 142:	81 11       	cpse	r24, r1
 144:	13 c0       	rjmp	.+38     	; 0x16c <main+0x46>
			PORTC |= (1 << 0);
 146:	85 b3       	in	r24, 0x15	; 21
 148:	96 b3       	in	r25, 0x16	; 22
 14a:	81 60       	ori	r24, 0x01	; 1
 14c:	96 bb       	out	0x16, r25	; 22
 14e:	85 bb       	out	0x15, r24	; 21
 150:	8f e1       	ldi	r24, 0x1F	; 31
 152:	9e e4       	ldi	r25, 0x4E	; 78
 154:	01 97       	sbiw	r24, 0x01	; 1
 156:	f1 f7       	brne	.-4      	; 0x154 <main+0x2e>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x34>
 15a:	00 00       	nop
			_delay_ms(10);
			COUNTER_VALUE (++count);
 15c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 160:	8f 5f       	subi	r24, 0xFF	; 255
 162:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
 166:	0e 94 60 00 	call	0xc0	; 0xc0 <COUNTER_VALUE>
 16a:	e1 cf       	rjmp	.-62     	; 0x12e <main+0x8>
			}
			else if (count == 1){
 16c:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 170:	81 30       	cpi	r24, 0x01	; 1
 172:	99 f4       	brne	.+38     	; 0x19a <main+0x74>
				PORTC |= (1 << 1);
 174:	85 b3       	in	r24, 0x15	; 21
 176:	96 b3       	in	r25, 0x16	; 22
 178:	82 60       	ori	r24, 0x02	; 2
 17a:	96 bb       	out	0x16, r25	; 22
 17c:	85 bb       	out	0x15, r24	; 21
 17e:	8f e1       	ldi	r24, 0x1F	; 31
 180:	9e e4       	ldi	r25, 0x4E	; 78
 182:	01 97       	sbiw	r24, 0x01	; 1
 184:	f1 f7       	brne	.-4      	; 0x182 <main+0x5c>
 186:	00 c0       	rjmp	.+0      	; 0x188 <main+0x62>
 188:	00 00       	nop
				_delay_ms(10);
				COUNTER_VALUE (++count);
 18a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 18e:	8f 5f       	subi	r24, 0xFF	; 255
 190:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
 194:	0e 94 60 00 	call	0xc0	; 0xc0 <COUNTER_VALUE>
 198:	ca cf       	rjmp	.-108    	; 0x12e <main+0x8>
			}
			else if (count == 2){
 19a:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 19e:	82 30       	cpi	r24, 0x02	; 2
 1a0:	31 f6       	brne	.-116    	; 0x12e <main+0x8>
				PORTC |= (1 << 2);
 1a2:	85 b3       	in	r24, 0x15	; 21
 1a4:	96 b3       	in	r25, 0x16	; 22
 1a6:	84 60       	ori	r24, 0x04	; 4
 1a8:	96 bb       	out	0x16, r25	; 22
 1aa:	85 bb       	out	0x15, r24	; 21
 1ac:	8f e1       	ldi	r24, 0x1F	; 31
 1ae:	9e e4       	ldi	r25, 0x4E	; 78
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <main+0x8a>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x90>
 1b6:	00 00       	nop
				_delay_ms(10);
				COUNTER_VALUE (++count);
 1b8:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1bc:	8f 5f       	subi	r24, 0xFF	; 255
 1be:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__data_end>
 1c2:	0e 94 60 00 	call	0xc0	; 0xc0 <COUNTER_VALUE>
				COUNTER_VALUE (count);
 1c6:	80 91 6a 00 	lds	r24, 0x006A	; 0x80006a <__data_end>
 1ca:	0e 94 60 00 	call	0xc0	; 0xc0 <COUNTER_VALUE>
				PORTC |= (1 << 5);
 1ce:	85 b3       	in	r24, 0x15	; 21
 1d0:	96 b3       	in	r25, 0x16	; 22
 1d2:	80 62       	ori	r24, 0x20	; 32
 1d4:	96 bb       	out	0x16, r25	; 22
 1d6:	85 bb       	out	0x15, r24	; 21
 1d8:	9f e7       	ldi	r25, 0x7F	; 127
 1da:	29 ea       	ldi	r18, 0xA9	; 169
 1dc:	83 e0       	ldi	r24, 0x03	; 3
 1de:	91 50       	subi	r25, 0x01	; 1
 1e0:	20 40       	sbci	r18, 0x00	; 0
 1e2:	80 40       	sbci	r24, 0x00	; 0
 1e4:	e1 f7       	brne	.-8      	; 0x1de <main+0xb8>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <main+0xc2>
 1e8:	00 00       	nop
				_delay_ms(150);
				PORTC &= ~(1 << 5);
 1ea:	85 b3       	in	r24, 0x15	; 21
 1ec:	96 b3       	in	r25, 0x16	; 22
 1ee:	8f 7d       	andi	r24, 0xDF	; 223
 1f0:	96 bb       	out	0x16, r25	; 22
 1f2:	85 bb       	out	0x15, r24	; 21
				PORTC &= ~(1 << 0);
 1f4:	85 b3       	in	r24, 0x15	; 21
 1f6:	96 b3       	in	r25, 0x16	; 22
 1f8:	8e 7f       	andi	r24, 0xFE	; 254
 1fa:	96 bb       	out	0x16, r25	; 22
 1fc:	85 bb       	out	0x15, r24	; 21
				PORTC &= ~(1 << 1);
 1fe:	85 b3       	in	r24, 0x15	; 21
 200:	96 b3       	in	r25, 0x16	; 22
 202:	8d 7f       	andi	r24, 0xFD	; 253
 204:	96 bb       	out	0x16, r25	; 22
 206:	85 bb       	out	0x15, r24	; 21
				PORTC &= ~(1 << 2);
 208:	85 b3       	in	r24, 0x15	; 21
 20a:	96 b3       	in	r25, 0x16	; 22
 20c:	8b 7f       	andi	r24, 0xFB	; 251
 20e:	96 bb       	out	0x16, r25	; 22
 210:	85 bb       	out	0x15, r24	; 21
				count = 0;
 212:	10 92 6a 00 	sts	0x006A, r1	; 0x80006a <__data_end>
 216:	8b cf       	rjmp	.-234    	; 0x12e <main+0x8>

00000218 <_exit>:
 218:	f8 94       	cli

0000021a <__stop_program>:
 21a:	ff cf       	rjmp	.-2      	; 0x21a <__stop_program>
